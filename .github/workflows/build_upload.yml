name: Build website and deploy with Docker

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.6.0
        with:
          cache-dependency-path: ./App/package-lock.json

      - name: Run npm commands
        working-directory: App
        run: |
          npm ci
          npm run build

      - name: Build Docker image
        run: docker build -t pannenstreifen-website .

      - name: Save Docker image
        run: docker save pannenstreifen-website | gzip > pannenstreifen-website.tar.gz

      - name: Upload Docker image to server and restart container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            # Ensure the Docker network exists
            docker network inspect website_net >/dev/null 2>&1 || docker network create website_net

            # Load the Docker image
            mkdir -p /tmp/docker-load
            cd /tmp/docker-load
            cat > pannenstreifen-website.tar.gz
            gunzip pannenstreifen-website.tar.gz
            docker load < pannenstreifen-website.tar

            # Remove old container if it exists
            docker stop pannenstreifen-website || true
            docker rm pannenstreifen-website || true

            # Run new container within the network
            docker run -d --name pannenstreifen-website --net website_net pannenstreifen-website

            # Clean up
            rm -rf /tmp/docker-load
